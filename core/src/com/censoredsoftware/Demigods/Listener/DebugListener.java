package com.censoredsoftware.Demigods.Listener;

import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;

import com.censoredsoftware.Demigods.API.AdminAPI;
import com.censoredsoftware.Demigods.Event.Altar.AltarCreateEvent;
import com.censoredsoftware.Demigods.Event.Altar.AltarCreateEvent.AltarCreateCause;
import com.censoredsoftware.Demigods.Event.Altar.AltarRemoveEvent;
import com.censoredsoftware.Demigods.Event.Altar.AltarRemoveEvent.AltarRemoveCause;
import com.censoredsoftware.Demigods.Event.Misc.ChestSpawnEvent;
import com.censoredsoftware.Demigods.Event.Shrine.ShrineCreateEvent;
import com.censoredsoftware.Demigods.Event.Shrine.ShrineRemoveEvent;
import com.censoredsoftware.Demigods.PlayerCharacter.PlayerCharacter;

public class DebugListener implements Listener
{
	@EventHandler(priority = EventPriority.MONITOR)
	public void onChestSpawn(ChestSpawnEvent event)
	{
		Location location = event.getLocation();

		// Send debug
		AdminAPI.sendDebug(ChatColor.RED + "Chest generated at " + ChatColor.GRAY + "(" + location.getWorld().getName() + ") " + location.getX() + ", " + location.getY() + ", " + location.getZ());
	}

	@EventHandler(priority = EventPriority.MONITOR)
	public void onAltarCreation(AltarCreateEvent event)
	{
		Location location = event.getLocation();
		AltarCreateCause cause = event.getCause();

		// Send debug
		AdminAPI.sendDebug(ChatColor.RED + "Altar generated by " + cause.toString() + " at " + ChatColor.GRAY + "(" + location.getWorld().getName() + ") " + location.getX() + ", " + location.getY() + ", " + location.getZ());
	}

	@EventHandler(priority = EventPriority.MONITOR)
	public void onAltarRemove(AltarRemoveEvent event)
	{
		Location location = event.getLocation();
		AltarRemoveCause cause = event.getCause();

		// Send debug
		AdminAPI.sendDebug(ChatColor.RED + "Altar at " + ChatColor.GRAY + "(" + location.getWorld().getName() + ") " + location.getX() + ", " + location.getY() + ", " + location.getZ() + " removed by " + cause.toString() + ".");
	}

	@EventHandler(priority = EventPriority.MONITOR)
	public void onShrineCreation(ShrineCreateEvent event)
	{
		Location location = event.getLocation();
		PlayerCharacter owner = event.getOwner();

		// Send debug
		AdminAPI.sendDebug(ChatColor.RED + "Shrine created by " + owner.getName() + " (" + owner.isDeity() + ") at: " + ChatColor.GRAY + "(" + location.getWorld().getName() + ") " + location.getX() + ", " + location.getY() + ", " + location.getZ());
	}

	@EventHandler(priority = EventPriority.MONITOR)
	public void onShrineRemove(ShrineRemoveEvent event)
	{
		Location location = event.getLocation();
		PlayerCharacter owner = event.getOwner();

		// Send debug
		AdminAPI.sendDebug(ChatColor.RED + "Shrine at (" + owner.isDeity() + ") at: " + ChatColor.GRAY + "(" + location.getWorld().getName() + ") " + location.getX() + ", " + location.getY() + ", " + location.getZ() + " removed.");
	}
}
